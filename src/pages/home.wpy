<style lang="scss"
  scoped>
  @import '../scss/_theme.scss';
  $bordercolor: #474848;
  .fixed {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    &.no-has-challenge .button {
      top: 30rpx;
    }
    .buttons {
      position: relative;
    }
    .button {
      width: 88rpx;
      height: 88rpx;
      border-radius: 44rpx;
      background-color: $orange;
      position: absolute;
      transition: all 300ms ease;
      top: 18rpx;
      &:active {
        opacity: 0.8;
      }
      &.person {
        left: 16rpx;
      }
      &.qrcode {
        right: 16rpx;
      }
      image {
        position: absolute;
        left: 0;
        top: 0;
        right: 0;
        bottom: 0;
        margin: auto;
        width: 40rpx;
        height: 40rpx;
      }
    }
  }

  .ing {
    background-color: $blackBar;
    line-height: 73rpx;
    color: $white;
    text-align: center;
    font-size: 28rpx;
    border-bottom: 1rpx solid $c3;
    text {
      color: $orange;
    }
  }

  .space {
    height: 74rpx;
    &.no-has-challenge {
      height: 50rpx;
    }
  }

  .best-score {
    color: $orange;
    text-align: center;
    padding: 40rpx 0 40rpx 0;
    margin: 0 auto;
    > view {
      position: relative;
      display: inline-block;
      min-width: 400rpx;
      border: 2rpx solid rgba($orange, 0.2);
      padding: 0 40rpx;
      .title {
        font-size: 28rpx;
        width: 100%;
        position: absolute;
        line-height: 40rpx;
        top: -21rpx;
        left: 0;
        width: 100%;
        view {
          display: inline-block;
          background-color: $blackBg;
          padding: 0 15rpx;
        }
      }
      .date {
        font-size: 24rpx;
        position: absolute;
        line-height: 40rpx;
        bottom: -22rpx;
        left: 0;
        width: 100%;
        view {
          background-color: $blackBg;
          display: inline-block;
          padding: 0 15rpx;
        }
      }
      .score {
        padding: 20rpx 0;
        view {
          display: inline;
          text.t1 {
            font-size: 100rpx;
            font-weight: bold;
            font-family: Arial, Helvetica, sans-serif;
            padding: 0 6rpx;
          }
          text.t2 {
            font-size: 26rpx;
            font-weight: normal;
          }
        }
      }
    }
  }

  .user-info {
    padding: 40rpx 30rpx 50rpx 30rpx;
    > view {
      display: flex;
    }
    view.flex {
      flex: 1;
      text-align: center;
      position: relative;
      &:before {
        position: absolute;
        content: "";
        display: block;
        width: 1rpx;
        height: 100rpx;
        background-color: $bordercolor;
        right: 0;
        top: 10rpx;
      }
      .t1 {
        font-size: 28rpx;
        line-height: 28rpx;
        color: $white;
        padding-bottom: 20rpx;
      }
      .t2 {
        font-size: 60rpx;
        color: $orange;
        font-family: Arial, Helvetica, sans-serif;
        image {
          width: 62rpx;
          height: 62rpx;
          border-radius: 62rpx;
          border: 4rpx solid $orange;
        }
      }
      &:last-child {
        &:before {
          display: none;
        }
      }
    }
  }

  .info-item {
    margin: 0 26rpx 30rpx 26rpx;
    border: 1px solid rgba($orange, 0.2);
    border-radius: 2rpx;
    padding: 30rpx;
    .info-item-title {
      font-size: 24rpx;
      line-height: 24rpx;
      color: $orange;
      padding-left: 0rpx;
      padding-bottom: 20rpx;
    }
    .info-item-desc {
      font-size: 28rpx;
      color: $c6;
      padding-left: 10rpx;
      padding-right: 10rpx;
      padding-bottom: 30rpx;
      line-height: 20px;
    }
    .info-item-content {
      border-top: 1px solid $bordercolor;
      padding-top: 30rpx;
      .button {
        line-height: 110rpx;
        width: 500rpx;
        text-align: center;
        color: $white;
        background-color: $orange;
        border-radius: 55rpx;
        font-size: 36rpx;
        margin: 0 auto;
        @include transition();
        &:active {
          opacity: 0.8;
        }
      }
      .button-text {
        font-size: 30rpx;
        color: $orange;
      }
    }
  }

  .confirm-mask {
    opacity: 0;
    visibility: hidden;
    @include transition();
    &.show {
      opacity: 1;
      visibility: visible;
    }
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: 99;
    image {
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
    }
    .mask-content {
      position: absolute;
      z-index: 1;
      height: 300rpx;
      width: 100%;
      text-align: center;
      top: 0;
      bottom: 0;
      left: 0;
      margin: auto;
      .text {
        font-size: 36rpx;
        color: $white;
        margin-bottom: 80rpx;
      }
      .button {
        margin: 0 auto;
        margin-bottom: 30rpx;
        width: 660rpx;
        line-height: 70rpx;
        border-radius: 70rpx;
        @include transition();
        &:active {
          opacity: 0.8;
        }
        &.orange {
          background-color: $orange;
          color: $white;
        }
        &.grey {
          background-color: $blackBg;
          color: $c6;
        }
      }
    }
  }

</style>
<template lang="wxml">
  <view class="fixed {{homeData.challengeId ? '' : 'no-has-challenge'}}">
    <view class="ing"
      @tap="toChallenge('{{homeData.challengeId}}')"
      wx:if="{{homeData.challengeId}}">您当前有一场挑战在进心中，
      <text>马上进入></text>
    </view>
    <view class="buttons">
      <view class="button person"
        @tap="toMe">
        <image src="../images/icon-person.png"></image>
      </view>
      <view class="button qrcode"
        wx:if="{{!homeData.challengeId}}"
        @tap="toQrcode">
        <image src="../images/icon-qrcode.png"></image>
      </view>
    </view>
  </view>

  <view class="space {{homeData.challengeId ? '' : 'no-has-challenge'}}"></view>

  <view class="best-score"
    wx:if="{{homeData.bestScore}}">
    <view>
      <view class="title">
        <view>历史最佳</view>
      </view>
      <view class="score">
        <view wx:if="{{bestScore.hour}}">
          <text class="t1">{{bestScore.hour}}</text>
          <text class="t2">h</text>
        </view>
        <view wx:if="{{bestScore.minute}}">
          <text class="t1">{{bestScore.minute}}</text>
          <text class="t2">min</text>
        </view>
        <view>
          <text class="t1">{{bestScore.second}}</text>
          <text class="t2">s</text>
        </view>
      </view>
      <view class="date">
        <view>{{homeData.bestScore.date}}</view>
      </view>
    </view>
  </view>

  <view class="user-info">
    <view>
      <view class="flex">
        <view class="t1">本月参与参数</view>
        <view class="t2">{{homeData.joinTime}}</view>
      </view>
      <view class="flex">
        <view class="t1">本周排名</view>
        <view class="t2"
          @tap="toRank">
          <image src="{{userInfo.userInfo.avatarUrl}}"></image>
        </view>
      </view>
    </view>
  </view>

  <view class="info-item">
    <view class="info-item-title">马上预约</view>
    <view class="info-item-desc">预约一步走，不用等待，合理安排您的塔拓时间。</view>
    <view class="info-item-content">
      <view class="button"
        @tap="toBooking">前往预约 ></view>
    </view>
  </view>
  <view class="info-item"
    wx:if="{{!homeData.challengeId}}">
    <view class="info-item-title">绑定手环</view>
    <view class="info-item-desc">马上绑定手环，开启你的塔拓之旅!一起来享受极限带来的乐趣！</view>
    <view class="info-item-content">
      <view class="button-text"
        @tap="toQrcode">前往绑定手环 ></view>
    </view>
  </view>

  <view class="confirm-mask {{showConfirmMask ? 'show' : ''}}">
    <image src="../images/game-bg.jpg"
      mode="aspectFill"></image>
    <view class="mask-content">
      <view class="text">你确认要开始该挑战吗？</view>
      <view class="button orange"
        @tap="confirmOk">确认</view>
      <view class="button grey"
        @tap="confirmCancel">取消</view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import defer from '../services/defer.js';
  import util from '../services/util.js';
  import urls from '../services/urls.js';
  import request from '../services/request.js';
  import loading from '../services/loading.js';

  export default class Home extends wepy.page {
    config = {
      navigationBarTitleText: '塔拓',
    }

    onShareAppMessage(res) {
      if (res.from === 'button') {
        // 来自页面内转发按钮
        console.log(res.target);
      }
      return {
        title: '塔拓',
        path: '/pages/home',
        success: function(res) {
          // 转发成功
          wepy.showToast({
            title: '转发成功',
            duration: 2000,
          });
        },
        fail: function(res) {
          // 转发失败
          wepy.showAlert({
            content: '转发失败',
          });
        }
      }
    }

    components = {

    }

    data = {
      userInfo: null,
      homeData: null,
      showConfirmMask: false,
    }

    computed = {
      bestScore() {
        if (this.homeData && this.homeData.bestScore) {
          return util.renderScore(this.homeData.bestScore.score);
        }
        return {};
      },
    }

    methods = {
      toChallenge: (challengeId) => {
        console.log('to challenge page', challengeId);
        wepy.navigateTo({
          url: `/pages/challenge?id=${challengeId}`
        })
      },
      toRank: () => {
        console.log('to rank page');
        wepy.navigateTo({
          url: '/pages/rank',
        });
      },
      toMe: () => {
        console.log('to me page');
        wepy.navigateTo({
          url: '/pages/me',
        });
      },
      toBooking: () => {
        console.log('to booking');
        wepy.navigateTo({
          url: '/pages/booking',
        });
      },
      toQrcode: () => {
        console.log('to qrcode page');
        wepy.scanCode({
          onlyFromCamera: true,
          success: (res) => {
            this.methods.confirmChallenge().then(() => {
              request.post(urls.postQrcode, {
                loadingDelay: 0,
                ...res,
              }).then(d => {
                this.methods.toChallenge(d.result.challengeId);
                this.methods.updateHome();
              });
            });
            this.$apply();
          },
          fail: (res) => {
            // wepy.showAlert({
            //   content: res.errMsg,
            // });
          },
        })
      },
      confirmOk: () => {
        this.confirmMaskDeferred.resolve();
        this.showConfirmMask = false;
      },
      confirmCancel: () => {
        this.showConfirmMask = false;
      },
      confirmChallenge: () => {
        const deferred = defer();

        this.showConfirmMask = true;
        this.confirmMaskDeferred = deferred;

        return deferred.promise;
      },
      updateHome: () => {
        request.get(urls.home).then(({
          result,
        }) => {
          this.homeData = result;
          this.$apply();
          loading.hide();
        });
      }
    }

    events = {

    }

    onShow() {
      console.log('home on show');
      request.getUserInfo().then(d => {
        this.userInfo = d;
        this.methods.updateHome();
      });
    }

    onLoad() {
      console.log('home on load');
      loading.show();
    }
  }

</script>
